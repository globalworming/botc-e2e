version: 2
jobs:
  startFrontend:
    docker:
      - image: 'circleci/node:latest'

    steps:
      - add_ssh_keys
      - run: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: git clone git@github.com:globalworming/botc-unofficial-frontend.git
      - run:
          name: frontend
          background: true
          command: |
            cd botc-unofficial-frontend
            npm install
            npm start &

  startBackend:
    docker:
      - image: 'circleci/openjdk:8u171-jdk'

    steps:
      - add_ssh_keys
      - run: mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - run: git clone git@github.com:globalworming/botc-unofficial-backend.git

      - run:
          name: start backend
          background: true
          command: |
            cd botc-unofficial-backend
            mvn spring-boot:run

  startSelenium:
    docker:
      - image: 'circleci/openjdk:8u171-jdk'
    steps:
      - run:
          name: Download Selenium
          command: |
            curl -O http://selenium-release.storage.googleapis.com/3.5/selenium-server-standalone-3.5.3.jar
      - run:
          name: Start Selenium
          background: true
          command: |
            mkdir selenium-log
            java -jar selenium-server-standalone-3.5.3.jar -log selenium-log/selenium.log

  waitForSutReady:
    docker:
      - image: 'cimg/base:stable'
    steps:
      - checkout
      - run:
          name: poll applications
          background: true
          command: |
            sh .circleci/waitForSutReady.sh
  test:
    docker:
      - image: 'circleci/openjdk:8u171-jdk-browsers'

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: mvn dependency:go-offline

      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
      - run: mvn clean verify

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

      - run:
          name: Save test results
          command: |
            rm -rf ./target/site/serenity/fontawesome-free-5.7.2-web
            cp -r ./target/site/serenity ~/test-results/
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/serenity
workflows:
  version: 2
  build_and_test:
    jobs:
      - startFrontend
      - startBackend
      - startSelenium
      - waitForSutReady
      - test:
          requires:
            - waitForSutReady
          filters:
            branches:
              only: master